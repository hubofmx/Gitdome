#例4. 求 100~999 之前所有的“水仙花数”，所谓“水仙花数”是指一个三位数，
# 其各位数字立方和等于该数本身，请写程序实现。
# 153 是一个“水仙花数”： 153= 13 ＋5 3 ＋3 3
#100  1 0 0     if   13+03+03==100： print()
#101  1 0 1     if   13+03+13==101： print()
#999  9 9 9     if   93+93+93==999： print()
#重复 ：  个位  十位  百位取出   三次方 ==  本身   循环体
# for     range(100,1000,1)
'''
import math
print("100~999 之前所有的水仙花数如下：")
for i in range(100,1000):
    #i 分别取出三个位数的值
    a = i//100
    b = (i%100)//10
    c = i%10
    #if math.pow(a,3)+math.pow(b,3)+math.pow(c,3)==i:
    if a**3+b**3+c**3==i:
        print(i)

#作业、从键盘输入一个数，判断是否为素数，并将其输出，
# 请编写程序实现。（要求使用while和for循环实现）
n = int(input("请输入一个数："))
flag = 0
for i in range(2,n):  # 2 3 ... 101  100次循环
    # 7%2 7%3 7%4  n%i         102%2=0 不是素数  1次计算结束  100计算
    if n%i==0:
        flag = flag+1  # 查看是否被整除

if flag==0:
    print(n,"是素数！")
else:
    print(n,"不是素数！")

####break  和 continue
n = int(input("请输入一个数："))
for i in range(2,n):  # 2 3 ... 101  100次循环
    # 7%2 7%3 7%4  7%5 7%6   n%i  --->循环没有被提前结束，没有整除，素数
    # 102%2=0 不是素数  1次计算结束  立马提前结束循环
    if n%i==0:
        print(n,"不是素数！")
        break #提前结束循环，循环次数会减少   打破
# 7%2 7%3 7%4  7%5 7%6   n%i  --->循环没有被提前结束，没有整除，素数
# i==6  循环没有提前结束  按部就班按完成  素数  i==n-1
if i==n-1:
    print(n, "是素数！")
'''
# 求 100以内的所有奇数的和，请编写程序实现。
#（要求使用continue）
sum = 0
for i in range(1,101):
    if i%2==0: # 偶数
        continue  # 提前结束本次循环，continue之后的语句不执行，继续执行下一次循环，
        # 循环的次数不会变化  ，100次循环，一次不会少
    sum = sum+i
print("1+3+7+...+99=",sum)

# 循环嵌套
'''
print("3~100之间素数情况：")
for n in range(3,101): # 3....100
    for i in range(2,n):
        if n%i==0:
            print(n,"不是素数！")
            break
    if i==n-1:
        print(n, "是素数！")
        '''
# 取快递 ： 20个人   外层：1 2 3 。。。。20
#                   内层：1：  4步骤： 报手机尾号  找快递  递给你  离开
                        #2：  4步骤： 报手机尾号  找快递  递给你  离开
                        #3：  4步骤： 报手机尾号  找快递  递给你  离开
#总结：循环嵌套分为：外层+内层： 外层循环1次，内层循环要循环完；
#  取快递： 20*4 = 80步骤

# 异常处理：类似我们的“规矩”，如果你不犯错啥事没有，一旦犯错，except捕捉，
# 抛出错误提示。
try: # 检查：把你担心会出错的语句放在try块之后
    x = eval(input("x="))
    s = x+100
    print(s)
except: # 捕捉错误，一旦你的try语句块有错误发生，except马上捕捉，
        # 执行except的print语句
    print("输入有误！")

