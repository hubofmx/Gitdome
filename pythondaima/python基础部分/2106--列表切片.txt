import random
''' 
def random_data(n):
    alist = []
    for i in range(0,n):
        x = random.randint(1,100)
        alist.append(x)
    return alist

n = int(input("x="))
l1 = random_data(n)
print(l1)
#print(l1.count(l1[0]))
#第1个数44： 出现 1 次
#第2个数38： 出现 1 次
for i in range(0,n): # i = 0 1 2 3 ....9
    print("第",i+1,"个数",l1[i],":","出现",l1.count(l1[i]),"次",sep="")

alist = ['p','y','t','h','o','n']
blist = alist[9:900] # 切片越界不报错
print(alist[9]) # 索引越界会报错
print(blist)

l1 = [3, 5, 7]
#l1[len(l1):]
l1[len(l1):] = [9]  # l1[3:]  末尾赋值9
print(l1)
l1[:0] = [1, 2]       # 最开始的位置 赋值
print(l1)
l1[3:3] = [4]  # 列表下标为3的位置赋值4
print(l1)

l = list(range(11))
print(l)
random.shuffle(l)
print(l)
#内置函数
print( len(l) ) # 返回列表元素的个数 长度
print( max(l) )
print( min(l) )
print( sum(l) )
# all() any() 返回的结果只有逻辑值 Ture False
print( all(l) ) # all代表全部，是否所有元素等价于“真”---》没有等价于0的数
print( any(l) )
reversed(l)  #逆序 内置函数实现
print(l)
l.reverse()  #逆序 列表自己的函数
print(l)

l1 = [3,5,-4,-1,0,-2,-6]
l1 = sorted(l1,reverse=True) # 内置函数   排序方式：默认升序  规则：没有说，默认整数大小比较
l1.sort(reverse=True) # list的函数
print(l1)
l1 = sorted(l1,key=lambda x:abs(x),reverse=True) # 按绝对值大小排序 reverse=True降序 ，key排序规则
l1 = sorted(l1,key=lambda x:abs(x),reverse=False) # reverse=True 升序，默认的
print(l1)
'''
l3 = []
for i in range(100):
    if i%2!=0:
        l3.append(i)
print(l3)

# 列表推导式1  [ 表达式  for循环 ]
l4 = [ x for x in range(10) ]
print(l4)

# 列表推导式2   [ 表达式  for循环  if语句 ]
l5 = [ x for x in range(100) if x%2!=0 ]
print(l5)


name_list = ['Harry','Muhammed','Oliver','George','River']
#1）计算列表的长度并输出；
print( len(name_list) )# 内置函数，python序列都可以用，--列表、字符串、元组等
#2）在列表后追加元素“Kate”，并输出添加后的列表；
name_list.append("Kate")
print(name_list)
#3）在列表第3个位置插入元素“Maple”，并输出添加后的列表；
name_list.insert(2,"Maple")
print(name_list)
#4）修改第5个位置的元素为“Jenson”，并输出修改后的列表；
name_list[4]="Jenson"
print(name_list)
#5）删除列表中的“Oliver”，并输出修改后的列表；
name_list.remove("Oliver")
print(name_list)
#6）删除列表中第3个元素，并输出修改后的列表；
name_list.pop(2)
print(name_list)
#7）删除列表中第2到4个元素，并输出修改后的列表；
name_list[1:4] = []
print(name_list)
#或者
for i in range(1,4):# i =  1  2  3
    name_list.pop(i)
print(name_list)
#8）将列表元素反转，并输出反转后的列表；
name_list.reverse()
print(name_list)
#9）使用for、len、range输出列表的索引。
l = len(name_list) # 2
for i in range(0,l): # 0 1
    #第1个Kate的索引是：0
    print("第",i+1,"个",name_list[i],"的索引为：",i)
